% is the register sign

registers:
    1) A => 000 (16 bit)
    2) B => 001 (16 bit)
    3) C => 010 (16 bit)
    4) D => 011 (16 bit)
    5) E => 100 (16 bit)
    6) F => 101 (16 bit)
    7) G => 110 (16 bit)
    8) H => 111 (16 bit)

+------------------------------------=== INSTRUCTIONS ===------------------------------------+
| â„–  | NAME | OPCODE | PARAMs      | size (bits) | size (bytes) | DESCRIPTION                |
+----+------+--------+-------------+-------------+--------------+----------------------------+
| 1  | LD   | 1      | %           | 8           | 1            | loads 8 bit value into %   |
| 2  | ST   | 2      | %           | 8           | 1            | stores 8 bit value from %  |
| 3  | ILD  | 3      | %           | 8           | 1            | loads 16 bit value into %  |
| 4  | IST  | 4      | %           | 8           | 1            | stores 16 bit value into % |
| 5  | SW   | 5      | %1, %2      | 11          | 2            | swap values in %1, %2      |
| 6  | WR   | 6      | %, value    | 24          | 3            | writes value into %        |
| 7  | CPY  | 7      | %1, %2      | 11          | 2            | %1 = %2                    |
| 8  | SHL  | 8      | %           | 8           | 1            | << %                       |
| 9  | SHR  | 9      | %           | 8           | 1            | >> %                       |
| 10 | MEM  | 10     | %           | 8           | 1            | set memory pointer to %    |
| 11 | NOT  | 11     | %1, %2      | 11          | 2            | %2 = !%1                   |
| 12 | AND  | 12     | %1, %2, %3  | 14          | 2            | %3 = %1 and %2             |
| 13 | OR   | 13     | %1, %2, %3  | 14          | 2            | %3 = %1 or %2              |
| 14 | XOR  | 14     | %1, %2, %3  | 14          | 2            | %3 = %1 xor %2             |
| 15 | SUM  | 15     | %1, %2, %3  | 14          | 2            | %3 = %1 + %2               |
| 16 | SUB  | 16     | %1, %2, %3  | 14          | 2            | %3 = %1 - %2               |
| 17 | MUL  | 17     | %1, %2, %3  | 14          | 2            | %3 = %1 * %2               |
| 18 | DIV  | 18     | %1, %2, %3  | 14          | 2            | %3 = %1 / %2               |
| 19 | JMP  | 19     |             | 5           | 1            | jump to memory pointer     |
| 20 | JC   | 20     |             | 5           | 1            | JMP if last math op carry  |
| 21 | JE   | 21     | %1, %2      | 11          | 2            | JMP if %1 == %2            |
| 22 | JL   | 22     | %1, %2      | 11          | 2            | JMP if %1 < %2             |
| 23 | JG   | 23     | %1, %2      | 11          | 2            | JMP if %1 > %2             |
| 24 | JLE  | 24     | %1, %2      | 11          | 2            | JMP if %1 <= %2            |
| 25 | JGE  | 25     | %1, %2      | 11          | 2            | JMP if %1 >= %2            |
| 26 | NOP  | 26     |             | 5           | 1            | do nothing (delay)         |
| 27 | HLT  | 0      |             | 5           | 1            | halt                       |
+----+------+--------+-------------+-------------+--------------+----------------------------+